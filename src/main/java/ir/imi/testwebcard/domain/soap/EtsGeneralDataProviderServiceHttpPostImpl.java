
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package ir.imi.testwebcard.domain.soap;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.6.5
 * 2025-01-08T14:55:53.966+03:30
 * Generated source version: 3.6.5
 *
 */

@javax.jws.WebService(
                      serviceName = "EtsGeneralDataProviderService",
                      portName = "EtsGeneralDataProviderServiceHttpPost",
                      targetNamespace = "http://tempuri.org/",
                      wsdlLocation = "file:/C:/Users/O120F~1.ASH/AppData/Local/Temp/tempdir15051163935329490852.tmp/EtsGeneralDataProviderService_1.wsdl",
                      endpointInterface = "ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost")

public class EtsGeneralDataProviderServiceHttpPostImpl implements EtsGeneralDataProviderServiceHttpPost {

    private static final Logger LOG = Logger.getLogger(EtsGeneralDataProviderServiceHttpPostImpl.class.getName());

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#addSpecialExtraWorkPermission(java.lang.String employeeCode, java.lang.String value, java.lang.String periodId, java.lang.String requestReason, java.lang.String description, java.lang.String specialExtraWorkId, java.lang.String organizationChartId)*
     */
    public java.lang.String addSpecialExtraWorkPermission(java.lang.String employeeCode, java.lang.String value, java.lang.String periodId, java.lang.String requestReason, java.lang.String description, java.lang.String specialExtraWorkId, java.lang.String organizationChartId) {
        LOG.info("Executing operation addSpecialExtraWorkPermission");
        System.out.println(employeeCode);
        System.out.println(value);
        System.out.println(periodId);
        System.out.println(requestReason);
        System.out.println(description);
        System.out.println(specialExtraWorkId);
        System.out.println(organizationChartId);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#addMissionRegistrationPermission(java.lang.String employeeCode, java.lang.String missionId, java.lang.String missionLocationId, java.lang.String missionSubject, java.lang.String beginDateTime, java.lang.String endDateTime, java.lang.String requestReason, java.lang.String description)*
     */
    public java.lang.String addMissionRegistrationPermission(java.lang.String employeeCode, java.lang.String missionId, java.lang.String missionLocationId, java.lang.String missionSubject, java.lang.String beginDateTime, java.lang.String endDateTime, java.lang.String requestReason, java.lang.String description) {
        LOG.info("Executing operation addMissionRegistrationPermission");
        System.out.println(employeeCode);
        System.out.println(missionId);
        System.out.println(missionLocationId);
        System.out.println(missionSubject);
        System.out.println(beginDateTime);
        System.out.println(endDateTime);
        System.out.println(requestReason);
        System.out.println(description);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#isValidPersonStringDate(java.lang.String employeeCode, java.lang.String dateTime, java.lang.String requestState)*
     */
    public boolean isValidPersonStringDate(java.lang.String employeeCode, java.lang.String dateTime, java.lang.String requestState) {
        LOG.info("Executing operation isValidPersonStringDate");
        System.out.println(employeeCode);
        System.out.println(dateTime);
        System.out.println(requestState);
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#test()*
     */
    public java.lang.String test() {
        LOG.info("Executing operation test");
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getIORecordPerPersistOn(java.lang.String fromDate, java.lang.String toDate)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfIoRecordDataModel getIORecordPerPersistOn(java.lang.String fromDate, java.lang.String toDate) {
        LOG.info("Executing operation getIORecordPerPersistOn");
        System.out.println(fromDate);
        System.out.println(toDate);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfIoRecordDataModel _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getFunctionalityList(java.lang.String employeeCode, java.lang.String fromDate, java.lang.String toDate)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfString getFunctionalityList(java.lang.String employeeCode, java.lang.String fromDate, java.lang.String toDate) {
        LOG.info("Executing operation getFunctionalityList");
        System.out.println(employeeCode);
        System.out.println(fromDate);
        System.out.println(toDate);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfString _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#addDailyExtraWorkPermission(java.lang.String employeeCode, java.lang.String extraWorkId, java.lang.String beginDateTime, java.lang.String endDateTime, java.lang.String requestReason, java.lang.String description)*
     */
    public java.lang.String addDailyExtraWorkPermission(java.lang.String employeeCode, java.lang.String extraWorkId, java.lang.String beginDateTime, java.lang.String endDateTime, java.lang.String requestReason, java.lang.String description) {
        LOG.info("Executing operation addDailyExtraWorkPermission");
        System.out.println(employeeCode);
        System.out.println(extraWorkId);
        System.out.println(beginDateTime);
        System.out.println(endDateTime);
        System.out.println(requestReason);
        System.out.println(description);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getFunctionalityWinPayList(java.lang.String employeeCode, java.lang.String date, java.lang.String withVacation, java.lang.String withSequenceWorkingDetails, java.lang.String withSpecialExtraWork, java.lang.String withVacationRemaining, java.lang.String withSpecialAddSubVacation, java.lang.String withMission)*
     */
    public ir.imi.testwebcard.domain.soap.PeriodCalculationInfo getFunctionalityWinPayList(java.lang.String employeeCode, java.lang.String date, java.lang.String withVacation, java.lang.String withSequenceWorkingDetails, java.lang.String withSpecialExtraWork, java.lang.String withVacationRemaining, java.lang.String withSpecialAddSubVacation, java.lang.String withMission) {
        LOG.info("Executing operation getFunctionalityWinPayList");
        System.out.println(employeeCode);
        System.out.println(date);
        System.out.println(withVacation);
        System.out.println(withSequenceWorkingDetails);
        System.out.println(withSpecialExtraWork);
        System.out.println(withVacationRemaining);
        System.out.println(withSpecialAddSubVacation);
        System.out.println(withMission);
        try {
            ir.imi.testwebcard.domain.soap.PeriodCalculationInfo _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getAllCurrentlyEmployeesWithKey()*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfEmployeeDataModelWithKey getAllCurrentlyEmployeesWithKey() {
        LOG.info("Executing operation getAllCurrentlyEmployeesWithKey");
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfEmployeeDataModelWithKey _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getPeriodCalculationInfo(java.lang.String employeeCode, java.lang.String fromDate, java.lang.String toDate)*
     */
    public void getPeriodCalculationInfo(java.lang.String employeeCode, java.lang.String fromDate, java.lang.String toDate) {
        LOG.info("Executing operation getPeriodCalculationInfo");
        System.out.println(employeeCode);
        System.out.println(fromDate);
        System.out.println(toDate);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#isValidReserve(java.lang.String employeeCode, java.lang.String startDateTime, java.lang.String endDateTime, java.lang.String officialHolidaySetting, java.lang.String agreedHolidaySetting, java.lang.String normalDaySetting, java.lang.String chekExtraWorkPermission)*
     */
    public boolean isValidReserve(java.lang.String employeeCode, java.lang.String startDateTime, java.lang.String endDateTime, java.lang.String officialHolidaySetting, java.lang.String agreedHolidaySetting, java.lang.String normalDaySetting, java.lang.String chekExtraWorkPermission) {
        LOG.info("Executing operation isValidReserve");
        System.out.println(employeeCode);
        System.out.println(startDateTime);
        System.out.println(endDateTime);
        System.out.println(officialHolidaySetting);
        System.out.println(agreedHolidaySetting);
        System.out.println(normalDaySetting);
        System.out.println(chekExtraWorkPermission);
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#isValidPerson(java.lang.String employeeCode, java.lang.String dateTime, java.lang.String requestState, java.lang.String leaveHour)*
     */
    public boolean isValidPerson(java.lang.String employeeCode, java.lang.String dateTime, java.lang.String requestState, java.lang.String leaveHour) {
        LOG.info("Executing operation isValidPerson");
        System.out.println(employeeCode);
        System.out.println(dateTime);
        System.out.println(requestState);
        System.out.println(leaveHour);
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getOrganizationChartIdByEmployeeById(java.lang.String regionId, java.lang.String employeeId)*
     */
    public long getOrganizationChartIdByEmployeeById(java.lang.String regionId, java.lang.String employeeId) {
        LOG.info("Executing operation getOrganizationChartIdByEmployeeById");
        System.out.println(regionId);
        System.out.println(employeeId);
        try {
            long _return = 0;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getAllExtraWorkPermissionsByDate(java.lang.String date)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfDailyExtraWorkPermissionDataModel getAllExtraWorkPermissionsByDate(java.lang.String date) {
        LOG.info("Executing operation getAllExtraWorkPermissionsByDate");
        System.out.println(date);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfDailyExtraWorkPermissionDataModel _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getDailyMissionsOrVacations(java.lang.String startDateTime, java.lang.String endDateTime)*
     */
    public java.lang.String getDailyMissionsOrVacations(java.lang.String startDateTime, java.lang.String endDateTime) {
        LOG.info("Executing operation getDailyMissionsOrVacations");
        System.out.println(startDateTime);
        System.out.println(endDateTime);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getAllEmployeesInfo()*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfEmployeeInfo getAllEmployeesInfo() {
        LOG.info("Executing operation getAllEmployeesInfo");
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfEmployeeInfo _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#addMissionRegistration(java.lang.String employeeCode, java.lang.String missionId, java.lang.String beginDateTime, java.lang.String endDateTime)*
     */
    public java.lang.String addMissionRegistration(java.lang.String employeeCode, java.lang.String missionId, java.lang.String beginDateTime, java.lang.String endDateTime) {
        LOG.info("Executing operation addMissionRegistration");
        System.out.println(employeeCode);
        System.out.println(missionId);
        System.out.println(beginDateTime);
        System.out.println(endDateTime);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getIoSources()*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfString getIoSources() {
        LOG.info("Executing operation getIoSources");
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfString _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getEmployeeFullNameFromLoginResult(java.lang.String userName, java.lang.String password)*
     */
    public java.lang.String getEmployeeFullNameFromLoginResult(java.lang.String userName, java.lang.String password) {
        LOG.info("Executing operation getEmployeeFullNameFromLoginResult");
        System.out.println(userName);
        System.out.println(password);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getUiRequestCartableIds(java.lang.String employeeCode)*
     */
    public ir.imi.testwebcard.domain.soap.UiRequestCartableIds getUiRequestCartableIds(java.lang.String employeeCode) {
        LOG.info("Executing operation getUiRequestCartableIds");
        System.out.println(employeeCode);
        try {
            ir.imi.testwebcard.domain.soap.UiRequestCartableIds _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getCalendarWorkDayTypesByEmployee(java.lang.String employeeCode, java.lang.String fromDate, java.lang.String toDate)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfCalendarDayListDto getCalendarWorkDayTypesByEmployee(java.lang.String employeeCode, java.lang.String fromDate, java.lang.String toDate) {
        LOG.info("Executing operation getCalendarWorkDayTypesByEmployee");
        System.out.println(employeeCode);
        System.out.println(fromDate);
        System.out.println(toDate);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfCalendarDayListDto _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getAllEmployeesWithOrgId()*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfEmployeeInfo getAllEmployeesWithOrgId() {
        LOG.info("Executing operation getAllEmployeesWithOrgId");
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfEmployeeInfo _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getAllPeriodFunctionalityWinPayList(java.lang.String employeeCode, java.lang.String date, java.lang.String withVacation, java.lang.String withSequenceWorkingDetails, java.lang.String withSpecialExtraWork, java.lang.String withVacationRemaining, java.lang.String withSpecialAddSubVacation, java.lang.String withMission)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfPeriodCalculationInfo getAllPeriodFunctionalityWinPayList(java.lang.String employeeCode, java.lang.String date, java.lang.String withVacation, java.lang.String withSequenceWorkingDetails, java.lang.String withSpecialExtraWork, java.lang.String withVacationRemaining, java.lang.String withSpecialAddSubVacation, java.lang.String withMission) {
        LOG.info("Executing operation getAllPeriodFunctionalityWinPayList");
        System.out.println(employeeCode);
        System.out.println(date);
        System.out.println(withVacation);
        System.out.println(withSequenceWorkingDetails);
        System.out.println(withSpecialExtraWork);
        System.out.println(withVacationRemaining);
        System.out.println(withSpecialAddSubVacation);
        System.out.println(withMission);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfPeriodCalculationInfo _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getOrganizationChartList(java.lang.String regionId)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfString getOrganizationChartList(java.lang.String regionId) {
        LOG.info("Executing operation getOrganizationChartList");
        System.out.println(regionId);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfString _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getValidCardList(java.lang.String regionId)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfString getValidCardList(java.lang.String regionId) {
        LOG.info("Executing operation getValidCardList");
        System.out.println(regionId);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfString _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getAllVacationRegistrationsByDate(java.lang.String date)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfVacationRegistrationDataModel getAllVacationRegistrationsByDate(java.lang.String date) {
        LOG.info("Executing operation getAllVacationRegistrationsByDate");
        System.out.println(date);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfVacationRegistrationDataModel _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getAllSubsetOrganizationChartsWithEmployeesByCurrentOrgId(java.lang.String currentOrganizationchartId)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfOrganizationChartDataModel getAllSubsetOrganizationChartsWithEmployeesByCurrentOrgId(java.lang.String currentOrganizationchartId) {
        LOG.info("Executing operation getAllSubsetOrganizationChartsWithEmployeesByCurrentOrgId");
        System.out.println(currentOrganizationchartId);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfOrganizationChartDataModel _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getAllMissionRegistrationsByDate(java.lang.String date)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfMissionRegistrationDataModel getAllMissionRegistrationsByDate(java.lang.String date) {
        LOG.info("Executing operation getAllMissionRegistrationsByDate");
        System.out.println(date);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfMissionRegistrationDataModel _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getIoRecordInDayByEmployeeCode(java.lang.String employeeCode, java.lang.String dayDate)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfStaffIOs getIoRecordInDayByEmployeeCode(java.lang.String employeeCode, java.lang.String dayDate) {
        LOG.info("Executing operation getIoRecordInDayByEmployeeCode");
        System.out.println(employeeCode);
        System.out.println(dayDate);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfStaffIOs _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#checkTimeAttendanceSystemHasThirdPartyWebServicec()*
     */
    public boolean checkTimeAttendanceSystemHasThirdPartyWebServicec() {
        LOG.info("Executing operation checkTimeAttendanceSystemHasThirdPartyWebServicec");
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getAllOrganizationChartList()*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfOrganizationChartDataModel getAllOrganizationChartList() {
        LOG.info("Executing operation getAllOrganizationChartList");
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfOrganizationChartDataModel _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getAllEmployees()*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfEmployeeDataModel getAllEmployees() {
        LOG.info("Executing operation getAllEmployees");
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfEmployeeDataModel _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getRemainUiEmployeeVacationTypeRepositoryList(java.lang.String employeeCode, java.lang.String currentWorkingYear)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfString getRemainUiEmployeeVacationTypeRepositoryList(java.lang.String employeeCode, java.lang.String currentWorkingYear) {
        LOG.info("Executing operation getRemainUiEmployeeVacationTypeRepositoryList");
        System.out.println(employeeCode);
        System.out.println(currentWorkingYear);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfString _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getAllSpecialExtraWorksByPeriodId(java.lang.String periodId)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfSpecialExtraWorkDataModel getAllSpecialExtraWorksByPeriodId(java.lang.String periodId) {
        LOG.info("Executing operation getAllSpecialExtraWorksByPeriodId");
        System.out.println(periodId);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfSpecialExtraWorkDataModel _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getEmployeeCodeByKeyNumber(java.lang.String keyNumber, java.lang.String gregorianDate, java.lang.String shamsiDate, java.lang.String systemType, java.lang.String deviceModuleType)*
     */
    public java.lang.String getEmployeeCodeByKeyNumber(java.lang.String keyNumber, java.lang.String gregorianDate, java.lang.String shamsiDate, java.lang.String systemType, java.lang.String deviceModuleType) {
        LOG.info("Executing operation getEmployeeCodeByKeyNumber");
        System.out.println(keyNumber);
        System.out.println(gregorianDate);
        System.out.println(shamsiDate);
        System.out.println(systemType);
        System.out.println(deviceModuleType);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getIsExitOverTimeList(java.lang.String perno, java.lang.String time, java.lang.String startDate, java.lang.String endDate)*
     */
    public boolean getIsExitOverTimeList(java.lang.String perno, java.lang.String time, java.lang.String startDate, java.lang.String endDate) {
        LOG.info("Executing operation getIsExitOverTimeList");
        System.out.println(perno);
        System.out.println(time);
        System.out.println(startDate);
        System.out.println(endDate);
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getOrganizationChartIdByEmployee(java.lang.String regionId, java.lang.String employeeId)*
     */
    public long getOrganizationChartIdByEmployee(java.lang.String regionId, java.lang.String employeeId) {
        LOG.info("Executing operation getOrganizationChartIdByEmployee");
        System.out.println(regionId);
        System.out.println(employeeId);
        try {
            long _return = 0;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getDayCalculationInfo(java.lang.String employeeCode, java.lang.String fromDate, java.lang.String toDate)*
     */
    public void getDayCalculationInfo(java.lang.String employeeCode, java.lang.String fromDate, java.lang.String toDate) {
        LOG.info("Executing operation getDayCalculationInfo");
        System.out.println(employeeCode);
        System.out.println(fromDate);
        System.out.println(toDate);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getListOfEmployeeEvents(java.lang.String employeeEvent)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfEmployeeDataModel getListOfEmployeeEvents(java.lang.String employeeEvent) {
        LOG.info("Executing operation getListOfEmployeeEvents");
        System.out.println(employeeEvent);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfEmployeeDataModel _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#addVacationRegistration(java.lang.String employeeCode, java.lang.String vacationId, java.lang.String beginDateTime, java.lang.String endDateTime)*
     */
    public java.lang.String addVacationRegistration(java.lang.String employeeCode, java.lang.String vacationId, java.lang.String beginDateTime, java.lang.String endDateTime) {
        LOG.info("Executing operation addVacationRegistration");
        System.out.println(employeeCode);
        System.out.println(vacationId);
        System.out.println(beginDateTime);
        System.out.println(endDateTime);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getAllCurrentlyEmployees()*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfEmployeeDataModel getAllCurrentlyEmployees() {
        LOG.info("Executing operation getAllCurrentlyEmployees");
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfEmployeeDataModel _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getAllEmployeesOfOneOrganizationChartWithAllSubsets(java.lang.String currentOrganizationchartId)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfEmployeeDataModel getAllEmployeesOfOneOrganizationChartWithAllSubsets(java.lang.String currentOrganizationchartId) {
        LOG.info("Executing operation getAllEmployeesOfOneOrganizationChartWithAllSubsets");
        System.out.println(currentOrganizationchartId);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfEmployeeDataModel _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getIORecordAfterId(java.lang.String id)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfIoRecordDataModel getIORecordAfterId(java.lang.String id) {
        LOG.info("Executing operation getIORecordAfterId");
        System.out.println(id);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfIoRecordDataModel _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#isPresent(java.lang.String id, java.lang.String dateTime)*
     */
    public boolean isPresent(java.lang.String id, java.lang.String dateTime) {
        LOG.info("Executing operation isPresent");
        System.out.println(id);
        System.out.println(dateTime);
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getDevicePersons(java.lang.String deviceModuleType)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfDevicePerson getDevicePersons(java.lang.String deviceModuleType) {
        LOG.info("Executing operation getDevicePersons");
        System.out.println(deviceModuleType);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfDevicePerson _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getAllIoRecordsByDate(java.lang.String date)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfIoRecordDataModel getAllIoRecordsByDate(java.lang.String date) {
        LOG.info("Executing operation getAllIoRecordsByDate");
        System.out.println(date);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfIoRecordDataModel _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getUiRequestCartableCount(java.lang.String employeeCode)*
     */
    public java.lang.String getUiRequestCartableCount(java.lang.String employeeCode) {
        LOG.info("Executing operation getUiRequestCartableCount");
        System.out.println(employeeCode);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getRemainUiEmployeeVacationTypeRepository(java.lang.String employeeCode, java.lang.String vacationtypeId)*
     */
    public java.lang.String getRemainUiEmployeeVacationTypeRepository(java.lang.String employeeCode, java.lang.String vacationtypeId) {
        LOG.info("Executing operation getRemainUiEmployeeVacationTypeRepository");
        System.out.println(employeeCode);
        System.out.println(vacationtypeId);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getAllValidEmployeeRange(java.lang.String dateTime, java.lang.String requestState)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfValidEmployeeRange getAllValidEmployeeRange(java.lang.String dateTime, java.lang.String requestState) {
        LOG.info("Executing operation getAllValidEmployeeRange");
        System.out.println(dateTime);
        System.out.println(requestState);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfValidEmployeeRange _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getIORecordPerDateRange(java.lang.String fromDate, java.lang.String toDate)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfIoRecordDataModel getIORecordPerDateRange(java.lang.String fromDate, java.lang.String toDate) {
        LOG.info("Executing operation getIORecordPerDateRange");
        System.out.println(fromDate);
        System.out.println(toDate);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfIoRecordDataModel _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#getCalendarWorkDayTypes(java.lang.String calendarName, java.lang.String fromDate, java.lang.String toDate)*
     */
    public ir.imi.testwebcard.domain.soap.ArrayOfCalendarDayListDto getCalendarWorkDayTypes(java.lang.String calendarName, java.lang.String fromDate, java.lang.String toDate) {
        LOG.info("Executing operation getCalendarWorkDayTypes");
        System.out.println(calendarName);
        System.out.println(fromDate);
        System.out.println(toDate);
        try {
            ir.imi.testwebcard.domain.soap.ArrayOfCalendarDayListDto _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#addMissionRegistrationEx(java.lang.String employeeCode, java.lang.String confirmEmployeeCode, java.lang.String missionId, java.lang.String beginDateTime, java.lang.String endDateTime, java.lang.String missionLocationName)*
     */
    public java.lang.String addMissionRegistrationEx(java.lang.String employeeCode, java.lang.String confirmEmployeeCode, java.lang.String missionId, java.lang.String beginDateTime, java.lang.String endDateTime, java.lang.String missionLocationName) {
        LOG.info("Executing operation addMissionRegistrationEx");
        System.out.println(employeeCode);
        System.out.println(confirmEmployeeCode);
        System.out.println(missionId);
        System.out.println(beginDateTime);
        System.out.println(endDateTime);
        System.out.println(missionLocationName);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#addVacationRegistrationPermission(java.lang.String employeeCode, java.lang.String vacationId, java.lang.String beginDateTime, java.lang.String endDateTime, java.lang.String vacationRequestReason, java.lang.String description)*
     */
    public java.lang.String addVacationRegistrationPermission(java.lang.String employeeCode, java.lang.String vacationId, java.lang.String beginDateTime, java.lang.String endDateTime, java.lang.String vacationRequestReason, java.lang.String description) {
        LOG.info("Executing operation addVacationRegistrationPermission");
        System.out.println(employeeCode);
        System.out.println(vacationId);
        System.out.println(beginDateTime);
        System.out.println(endDateTime);
        System.out.println(vacationRequestReason);
        System.out.println(description);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see ir.imi.testwebcard.domain.soap.EtsGeneralDataProviderServiceHttpPost#persistIoRecrd(java.lang.String keyNumber, java.lang.String ioDateTime, java.lang.String deviceModuleType, java.lang.String hadwareCode)*
     */
    public boolean persistIoRecrd(java.lang.String keyNumber, java.lang.String ioDateTime, java.lang.String deviceModuleType, java.lang.String hadwareCode) {
        LOG.info("Executing operation persistIoRecrd");
        System.out.println(keyNumber);
        System.out.println(ioDateTime);
        System.out.println(deviceModuleType);
        System.out.println(hadwareCode);
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
